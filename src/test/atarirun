#!/bin/sh

# Initialization
PATH=:/bin:/usr/bin
export PATH

# Damit die Tests aus irgendeinem Verzeichnis heraus aufgerufen werden
# koennen:
if [ `pwd` != "/usr/src/test" -a `pwd` != "/u2/src/test" ] ; then
  PATH=$PATH:/usr/src/test
  export PATH
  for f in t10a t11a t11b test1.c test7 ; do
    cp -p /usr/src/test/$f .
  done
fi

rm -rf DIR*			# remove any old junk lying around
passed=`expr 0`			# count number of tests run correctly
failed=`expr 0`			# count number of tests that failed
total=`expr 0`			# total number of tests tried
badones=			# list of tests that failed

# Run all the tests, keeping track of who failed.
#
# VS 18.04.2002
# Fehler treten auf:
#
#  5: SOZOBON Kernel/SOZOBON Programm und CC68 Kernel/SOZOBON Programm:
#      Und auf einmal tut's !!!
#     CC68 Programm:
#      SIGUSR1, core dump, nicht ausgeloggt
#
#  7: SOZOBON Kernel: (liegt nicht an src/kernel, wahrscheinlich src/fs!)
#       System Crash bei Subtest 4 und 5 (16/32), Meldung aus fs:
#    	"File System Panic: fs/do_unpause called with XOPEN"
#       Und auf einmal tut's !!!
#
#  9: Setjump/Longjump Test: Register werden veraendert (beide Compiler)
#      Behoben (mit _SETJMP_SAVES_REGS=1) fuer Sozobon
#
# 15: strcmp/strncmp/memcmp (strstr/memcpy/memmove)
#      Sozobon: strcmp, strncmp, memcmp brauchen das Flag "NOT_ANSI".
#               Da strstr() jedoch wieder ANSI konform ist, habe ich das
#               Flag STRSTR_IS_ANSI eingefuehrt.
#      CC68:    Im Prinzip dasselbe. Allerdings:
#               Obwohl diesselbe Routinen verwendet werden, schlagen
#               memcpy() und memmove() fehl!!! Nicht nachvollziehbar!
#
# 20: CC68 Programm:
#      Subtest 7, error19, errno=9 (bad file number)
#      Subtest 7, error20, errno=9 (bad file number)
#
# 36: SOZOBON Kernel/SOZOBON Programm:
#      Manchmal (wenn andere "harte" Tests schon liefen?)
#      pathconf/fpathconf Test crashed System mit Signal 4.
#
# 37: SOZOBON Kernel:
#      Test 1 okay, Test2 fuehrt zu Absturz (File Table overflow, sig, ...)
#     CC68 Kernel:
#      ditto
#
# Manchmal schlagen fehl:
# 28: Subtest2, error56, errno=10 (no children), dann 57 errno=0
# 40: Subtest3, error6, errno=9 (Bad file number) (Auf Floppy aufgetreten)
#     Ist die Maschine zu langsam?
#
# sh2: Sozobon erzeugt kein a.out, deswegen modifiziert
#
# Die Tests 16, 25, und 34 enthalten Code, der von der Version des
# Filesystems abhaengig ist. Entweder es passt, oder die Tests werden
# mit dem Schalter V1_FILESYSTEM fuer V1 Filesysteme uebersetzt.
#
# Die Tests 2, 17 und 18 laufen nicht unmodifiziert durch den Compiler,
# da Variablen erst doppelt deklariert werden (erst ohne init, dann mit).
#
clr
#for i in  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 \
#         21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
for i in  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 \
         21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
do total=`expr $total + 1`
   if test$i
      then passed=`expr $passed + 1`
      else failed=`expr $failed + 1`
           badones=`echo $badones " " $i`
   fi
done

# Print results of the tests.
echo " "
if test $total = $passed
   then echo All $passed tests completed without error.
   else echo Testing completed.  Score:   $passed passed,  $failed failed
        echo The following tests failed: $badones
fi

echo " "
sh1
sh2

if [ `pwd` != "/usr/src/test" ] ; then
  rm -f t10a t11a t11b
fi

# EOF
